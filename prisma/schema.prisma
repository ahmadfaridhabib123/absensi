// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  password    String
  role        UserRole @default(SISWA)
  nis         String?  @unique
  nip         String?  @unique
  className   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  attendances Attendance[]
  classes     ClassTeacher[]
}

model Class {
  id          String   @id @default(cuid())
  name        String   @unique
  grade       String
  program     String?
  studentCount Int     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  teachers    ClassTeacher[]
  attendances Attendance[]
}

model ClassTeacher {
  id        String   @id @default(cuid())
  classId   String
  teacherId String
  createdAt DateTime @default(now())
  
  class     Class @relation(fields: [classId], references: [id], onDelete: Cascade)
  teacher   User  @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  
  @@unique([classId, teacherId])
}

model Attendance {
  id          String         @id @default(cuid())
  studentId   String
  classId     String
  date        DateTime
  checkIn     DateTime?
  checkOut    DateTime?
  status      AttendanceStatus
  notes       String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  
  student     User  @relation(fields: [studentId], references: [id], onDelete: Cascade)
  class       Class @relation(fields: [classId], references: [id], onDelete: Cascade)
  
  @@unique([studentId, date])
}

model AcademicCalendar {
  id          String   @id @default(cuid())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  type        CalendarType
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@unique([title, startDate])
}

model SystemLog {
  id        String   @id @default(cuid())
  action    String
  details   String?
  userId    String?
  createdAt DateTime @default(now())
}

enum UserRole {
  SISWA
  GURU
  ADMIN
}

enum AttendanceStatus {
  HADIR
  IZIN
  SAKIT
  ALPHA
}

enum CalendarType {
  HARI_LIBUR
  UJIAN
  KEGIATAN
  LIBUR_SEMESTER
}